def hamming_distance(sample, pattern)
	distance = 0
	pattern.length.times { |index| distance += 1 if sample[index] != pattern[index] }
	return distance
end

def get_all_k_meres(sample, k_mere_length)
	k_meres = Hash.new { |hash, key| hash[key] = 0 }
	(0..sample.length-k_mere_length).each do |sub_sample|
		k_meres[sample[sub_sample,k_mere_length]] = 1
	end
	return k_meres.keys
end

def distance_between_patterns_and_string(strings, pattern)
	distance = 0
	strings.each do |dna|
		hamming = 9999999

		get_all_k_meres(dna, pattern.length).each do |k_mere|
			current_distance = hamming_distance(k_mere, pattern)
			if hamming > current_distance
				hamming = current_distance
			end
		end
		distance += hamming
	end
	return distance
end

pattern = "GGGCGC"
strings = "ATTCGATGCTCTGGGATCGAGTGGATATGTTTTGGGTCAATGCTTGAGGGTAATAACCGTTCGTCGGTACAAGAATGTATCAGAGGAACCCCGCAAATC CGCACTGCTGTCCGGAAGCTACCATTCAAGCAAGCACAGCGGGTGAGTTGACGCGTGGACTACTACAGCTGGTAAACGGATGCCTGTCCCACAGCGATC GATGACACATGGTAGGGCTGGGGAGCTACGGTAGTAGAACAACCCCTGAATTCTAATTCCACGTTGCGAGTGCGAGCGTCTGCTAGTCGCGCATCGGAG ACCACTATCACCGGGGGACGCAGGACTCAGCAACATGGCGCTTGAGGGGTGGATTATTTAGTGTTGTCACAATATCGGCAACACCGGTGGATGGTCCTC TACTGCGTTTGTGTCTCATACCCCTTAGGGCGAGTTAGCGAGACAATCCTCTGGGCGTCAATAAAAAGATGGTGCGTTTACATTGAAACGTTTGGCATT TACGCATCAGGCATCGGGTGGGATATTTGATCGAGACCCGATCCAGTAGCTTGAGCCACCGCTTAGCTCCCTCCTCCTTTGCATTCCGCCACACGGTCG CCAGCAATACCCTGGCCTACGGCCAGGGGCCCGTGGCCTTTCTCTTCAGTCGAACGCAAGTTAGAACACCCCAAAGCAGGGCTGTACGCTGATCGTATT GTGGTGAGACACAAAAATAGCATTCAATGCTCTCAGCTCCTATAGATTGACTCGTAGTGAGCAGAATTCATCGAAAGCCCTTGTAGAGCGCGTTGAATT TCTGATTCTCGCGCGCGGAGTGGCTTTAATCGTGAGAGCGGTCTTGTTCAGGCCCATTTACCTTCTTACATCAAGCCGGCGCACCAATCTAGAAGTTAT TCCAGCCTGAGTTTCGATCGCTCTCAGTAAGAATCGCATCCGTACACAATGAGAGTGGCCAGGCCCCCGCTTCTAAATGACGCTGATTCATTAACACTC GGCCTCCTAGAGACAATGGCACAATCAAATATATGTTCTACCGGCTGGCTGACTCCAACGCTCATGGAAATGGTGAGTTGCTTCATCGGTTTGCCCTTA GACAGGTCCTCTTCAGTGCATCACAAGATATGCCCGAGGCATCTGTTTACCGATCTTCTTATCCTAACACAGGCTCTTGTGTGTGGAAAAGCCGGGGGC GCGTGGCTCGTTCATCAAACCAGACCCGGTGTTTGGGGATCCACTAACCGATCAACATAAAAGCCAGGGATGCTCGCTCATTAGGATTTCGCGCTGTTT CAACGGCTAACGCTCAAAGAGAGCTACGGACTGCTGGCGGCGGAAGTTTGGCTCATATACCGTAAAGGTTTGTTTGGGCAGTCAGCTCTTACCTCTACG TCTTCGTGGCAAAAATCTGTTACCTATCTCACGAGTTCGATCGGTGCTCCTTTATACCCTCGCGTTGTAGGGATGACGTCCCTGAAGCGTTAAGGCAGG GTTAGTTCCACGTTATTCCAGACCCACCTGTCGCCGATATATCGTTAAGCTAACCCTCGCTCGGCTATCTGATACAGGAAGGCACAGGCGGACATGGCC TGCCTGAACTTAGCCTGTGCCGCAATTAAGTGTTCTACCTCCTCTAGAACCTTTAACACTTTCTAATTTGCACCCTCATTAAGGTGTCGAGGCGTTCAA ACAGTCCAGGTTTAAGGACATATCCCACGTATTTGCCGTATTCCTCACGTGCGCCTTACGAGTCTAGAAGGTGAGGTTGCCCGGCGATTTGACGTCTAG GCGAAGGACGCTAGATCAAACGTCTTACCACCTCCGGACGCATCGTAACCAAATGAGGGGGCCTGTGTGCGGCATATGTGCTTACTCTCGTACGTATGA GCGCGTTTTCTCTCGTAGCAGATCCAGGTAACCCATCTGAATCTGCCTTAAGTTAGCTTGGGCCGTCTAAAGGAGGTCAGGACAACGCTTTCTTGCGCA CGATGGAGCTGTGTGTAAAGTATGGCCCCAGTTTCTCCGCACTCATGCTCGGCACCTACAGCGTCTGATGCTCGGCAGGAATTGGCTCATGTCGAATCT TTCGTTCGCCCACCACGTGGCAACCCGCACTTCAGACCCGCATAAAACGAGGCGAGTATTAATCGAATGGGACCCGGACGGTGTATCCTGTATAGATGC GGCATTCGAAATCCGACACACCCAGGCAAACTCCATAGGATCTATAACTGCATAGGGATTCATTCCTCGGTATATCAAGGAGAATCTTATGGAAAAACG AGGCGGTCTGTAGGTTGTATAAAAAGGGTCTCGGACATTCCCAAGTTATCGATTCCAGTCTGCTTGTCCCGGCGTCCCTCACGCAATCCAAAGTTTTGC CGTCACACATGGCTCCCATGCTCCGCCTTGTTGCTCCGCGGAGCGTGGACAAGGGTTAACATATTGTCACGATAAACAGTGGCGGGAGAGCATGCGTTG TCAGAGGTTGAATTGCTTGCCCCCCTTACCCTTCACGGGCTGAAGGCCAACCGCCTCTCTTCGGGCGTCGCTCGTGTGCAAAACTCAAAAGCGTCCCTG GTGTAAATTTATTGACGTGGTTGTCCCCCAACTTTGCGCCAAGTCTTTGCAGACCGCATCGTTAGAAAATCTCGCGTACCAGTATGATCGTGACCGCTG CAGAGTTTAGTACGGTGAGTCAGAACAGCTGGCCCCGGCTTAAGAAGTCGAGTATCGATCCTTAATATCATTATGCACGCCTTGGCCCCTTATAGACGC ACTGAGTGGCCAGATATGGCTGTAATGGTACCCAAAAACCCGTTCAGCTCTGGCCAATTGCCTACCTCTATACTGTGCAGTGGACCCTGGATCAAGTCT TGACATTTTACTTAGCCTTTGGTGCAAGCCCATCGCTTACTGCACGACGAGCAGTGGTGGACGCCGAAAACCCCTAACTGTCAATTCCGGAATATTATT".split(" ")

puts distance_between_patterns_and_string(strings, pattern)